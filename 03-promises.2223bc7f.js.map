{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAE3C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EAAK,C,SAACN,E,MAAUC,IAEhBM,EAAK,C,SAACP,E,MAAUC,GAAQ,GAGzBA,EAAM,G,CAIAN,SAASC,cAAc,SAC/Ba,iBAAiB,UAAUC,IAC9BA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAKd,EAAYe,MAAOD,GAAK,EAC3Cb,EAAca,EAAGA,EAAIf,EAAUgB,MAAQC,OAAOpB,EAAWmB,QACtDE,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MAEjBe,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBlB,QAAiBC,MAAU,IAGnDkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAElBe,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBpB,QAAeC,MAAU,GAE/C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res( {position, delay} )\n      } else {\n        rej( {position, delay} )\n      }\n\n    }, delay)\n  })\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', evt => {\n  evt.preventDefault()\n  for (let i = 1; i <= inputAmount.value; i += 1) {\n    createPromise(i, i * inputStep.value + Number(inputDelay.value))\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","evt","preventDefault","i","value","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2223bc7f.js.map"}